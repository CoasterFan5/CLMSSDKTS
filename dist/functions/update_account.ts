 //Generated by CoasterFan5
  const baseUrl = "/v1/accounts/{id}";
  import type {Account} from "../models/Account"

  const method = "PUT"

  const urlBuilder = (base: string, items: Record<string, unknown>) => {
    let newUrl = baseUrl
    for (const key in items) {
      newUrl = newUrl.replaceAll(`{${key}}`, `${items[key]}`)
    }

    return base + newUrl
  }

export const update_account = async (token: string, baseUrl: string, params: {
  "id": string;"account[name]"?: string;"account[sis_account_id]"?: string;"account[default_time_zone]"?: string;"account[default_storage_quota_mb]"?: number;"account[default_user_storage_quota_mb]"?: number;"account[default_group_storage_quota_mb]"?: number;"account[course_template_id]"?: number;"account[parent_account_id]"?: number;"account[settings][restrict_student_past_view][value]"?: boolean;"account[settings][restrict_student_past_view][locked]"?: boolean;"account[settings][restrict_student_future_view][value]"?: boolean;"account[settings][microsoft_sync_enabled]"?: boolean;"account[settings][microsoft_sync_tenant]"?: string;"account[settings][microsoft_sync_login_attribute]"?: string;"account[settings][microsoft_sync_login_attribute_suffix]"?: string;"account[settings][microsoft_sync_remote_attribute]"?: string;"account[settings][restrict_student_future_view][locked]"?: boolean;"account[settings][lock_all_announcements][value]"?: boolean;"account[settings][lock_all_announcements][locked]"?: boolean;"account[settings][usage_rights_required][value]"?: boolean;"account[settings][usage_rights_required][locked]"?: boolean;"account[settings][restrict_student_future_listing][value]"?: boolean;"account[settings][restrict_student_future_listing][locked]"?: boolean;"account[settings][conditional_release][value]"?: boolean;"account[settings][conditional_release][locked]"?: boolean;"account[settings][password_policy]"?: undefined;"account[settings][enable_as_k5_account][value]"?: boolean;"account[settings][use_classic_font_in_k5][value]"?: boolean;"account[settings][horizon_account][value]"?: boolean;"override_sis_stickiness"?: boolean;"account[settings][lock_outcome_proficiency][value]"?: boolean;"account[lock_outcome_proficiency][locked]"?: boolean;"account[settings][lock_proficiency_calculation][value]"?: boolean;"account[lock_proficiency_calculation][locked]"?: boolean;"account[services]"?: undefined
}) => {
  const r = await fetch(urlBuilder(baseUrl, params) + "?per_page=100", {
    method: method,
    headers: {
      "Authorization": "Bearer " + token
    }
  })
  if(r.status != 200) {
    throw r
    return undefined
  }
  return (await r.json()) as Account
}
