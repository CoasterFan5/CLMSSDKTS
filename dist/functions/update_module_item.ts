 //Generated by CoasterFan5
  const baseUrl = "/v1/courses/{course_id}/modules/{module_id}/items/{id}";
  import type {ModuleItem} from "../models/ModuleItem"


  const urlBuilder = (base: string, items: Record<string, unknown>) => {
    let newUrl = baseUrl
    for (const key in items) {
      newUrl = newUrl.replaceAll(`{${key}}`, `${items[key]}`)
    }

    return base + newUrl
  }

export const update_module_item = async (token: string, baseUrl: string, params: {
  "course_id": string;"module_id": string;"id": string;"module_item[title]"?: string;"module_item[position]"?: number;"module_item[indent]"?: number;"module_item[external_url]"?: string;"module_item[new_tab]"?: boolean;"module_item[completion_requirement][type]"?: string;"module_item[completion_requirement][min_score]"?: number;"module_item[published]"?: boolean;"module_item[module_id]"?: string
}) => {
  console.log(token)
  const r = await fetch(urlBuilder(baseUrl, params), {
    headers: {
      "Authorization": "Bearer " + token
    }
  })
  if(r.status != 200) {
    console.error(r)
    return undefined
  }
  return (await r.json()) as ModuleItem
}
