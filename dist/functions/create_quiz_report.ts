 //Generated by CoasterFan5
  const baseUrl = "/v1/courses/{course_id}/quizzes/{quiz_id}/reports";
  import type {QuizReport} from "../models/QuizReport"


  const urlBuilder = (base: string, items: Record<string, unknown>) => {
    let newUrl = baseUrl
    for (const key in items) {
      newUrl = newUrl.replaceAll(`{${key}}`, `${items[key]}`)
    }

    return base + newUrl
  }

export const create_quiz_report = async (token: string, baseUrl: string, params: {
  "course_id": string;"quiz_id": string;"quiz_report[report_type]": string;"quiz_report[includes_all_versions]"?: boolean;"include"?: undefined
}) => {
  console.log(token)
  const r = await fetch(urlBuilder(baseUrl, params), {
    headers: {
      "Authorization": "Bearer " + token
    }
  })
  if(r.status != 200) {
    console.error(r)
    return undefined
  }
  return (await r.json()) as QuizReport
}
