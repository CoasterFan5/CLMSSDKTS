/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { LockInfo } from './lockInfo';
import { User } from './user';

export class Page {
    /**
    * The block editor attributes for this page. (optionally included, and only if this is a block editor created page)
    */
    'blockEditorAttributes'?: object;
    /**
    * the page content, in HTML (present when requesting a single page; optionally included when listing pages)
    */
    'body'?: string;
    /**
    * the creation date for the page
    */
    'createdAt'?: Date;
    /**
    * roles allowed to edit the page; comma-separated list comprising a combination of \'teachers\', \'students\', \'members\', and/or \'public\' if not supplied, course defaults are used
    */
    'editingRoles'?: string;
    /**
    * The editor used to create and edit this page. May be one of \'rce\' or \'block_editor\'.
    */
    'editor'?: string;
    /**
    * whether this page is the front page for the wiki
    */
    'frontPage'?: boolean;
    /**
    * (DEPRECATED) whether this page is hidden from students (note: this is always reflected as the inverse of the published value)
    */
    'hideFromStudents'?: boolean;
    'lastEditedBy'?: User;
    /**
    * (Optional) An explanation of why this is locked for the user. Present when locked_for_user is true.
    */
    'lockExplanation'?: string;
    'lockInfo'?: LockInfo;
    /**
    * Whether or not this is locked for the user.
    */
    'lockedForUser'?: boolean;
    /**
    * the ID of the page
    */
    'pageId'?: number;
    /**
    * scheduled publication date for this page
    */
    'publishAt'?: Date;
    /**
    * whether the page is published (true) or draft state (false).
    */
    'published'?: boolean;
    /**
    * the title of the page
    */
    'title'?: string;
    /**
    * the date the page was last updated
    */
    'updatedAt'?: Date;
    /**
    * the unique locator for the page
    */
    'url'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "blockEditorAttributes",
            "baseName": "block_editor_attributes",
            "type": "object"
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "editingRoles",
            "baseName": "editing_roles",
            "type": "string"
        },
        {
            "name": "editor",
            "baseName": "editor",
            "type": "string"
        },
        {
            "name": "frontPage",
            "baseName": "front_page",
            "type": "boolean"
        },
        {
            "name": "hideFromStudents",
            "baseName": "hide_from_students",
            "type": "boolean"
        },
        {
            "name": "lastEditedBy",
            "baseName": "last_edited_by",
            "type": "User"
        },
        {
            "name": "lockExplanation",
            "baseName": "lock_explanation",
            "type": "string"
        },
        {
            "name": "lockInfo",
            "baseName": "lock_info",
            "type": "LockInfo"
        },
        {
            "name": "lockedForUser",
            "baseName": "locked_for_user",
            "type": "boolean"
        },
        {
            "name": "pageId",
            "baseName": "page_id",
            "type": "number"
        },
        {
            "name": "publishAt",
            "baseName": "publish_at",
            "type": "Date"
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "boolean"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Page.attributeTypeMap;
    }
}

