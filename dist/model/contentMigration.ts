/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ContentMigration {
    /**
    * attachment api object for the uploaded file may not be present for all migrations
    */
    'attachment'?: string;
    /**
    * timestamp
    */
    'finishedAt'?: Date;
    /**
    * the unique identifier for the migration
    */
    'id'?: number;
    /**
    * API url to the content migration\'s issues
    */
    'migrationIssuesUrl'?: string;
    /**
    * the type of content migration
    */
    'migrationType'?: string;
    /**
    * the name of the content migration type
    */
    'migrationTypeTitle'?: string;
    /**
    * file uploading data, see {file:file_uploads.html File Upload Documentation} for file upload workflow This works a little differently in that all the file data is in the pre_attachment hash if there is no upload_url then there was an attachment pre-processing error, the error message will be in the message key This data will only be here after a create or update call
    */
    'preAttachment'?: string;
    /**
    * The api endpoint for polling the current progress
    */
    'progressUrl'?: string;
    /**
    * timestamp
    */
    'startedAt'?: Date;
    /**
    * The user who started the migration
    */
    'userId'?: number;
    /**
    * Current state of the content migration: pre_processing, pre_processed, running, waiting_for_select, completed, failed
    */
    'workflowState'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attachment",
            "baseName": "attachment",
            "type": "string"
        },
        {
            "name": "finishedAt",
            "baseName": "finished_at",
            "type": "Date"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "migrationIssuesUrl",
            "baseName": "migration_issues_url",
            "type": "string"
        },
        {
            "name": "migrationType",
            "baseName": "migration_type",
            "type": "string"
        },
        {
            "name": "migrationTypeTitle",
            "baseName": "migration_type_title",
            "type": "string"
        },
        {
            "name": "preAttachment",
            "baseName": "pre_attachment",
            "type": "string"
        },
        {
            "name": "progressUrl",
            "baseName": "progress_url",
            "type": "string"
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "Date"
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "number"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ContentMigration.attributeTypeMap;
    }
}

