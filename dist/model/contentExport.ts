/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ContentExport {
    'attachment'?: any;
    /**
    * the date and time this export was requested
    */
    'createdAt'?: Date;
    /**
    * the type of content migration: \'common_cartridge\' or \'qti\'
    */
    'exportType'?: string;
    /**
    * the unique identifier for the export
    */
    'id'?: number;
    /**
    * The api endpoint for polling the current progress
    */
    'progressUrl'?: string;
    /**
    * The ID of the user who started the export
    */
    'userId'?: number;
    /**
    * Current state of the content migration: created exporting exported failed
    */
    'workflowState'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attachment",
            "baseName": "attachment",
            "type": "any"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "exportType",
            "baseName": "export_type",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "progressUrl",
            "baseName": "progress_url",
            "type": "string"
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "number"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ContentExport.attributeTypeMap;
    }
}

