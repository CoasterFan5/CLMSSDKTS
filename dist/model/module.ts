/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ModuleItem } from './moduleItem';

export class Module {
    /**
    * the date the calling user completed the module (Optional; present only if the caller is a student or if the optional parameter \'student_id\' is included)
    */
    'completedAt'?: Date;
    /**
    * the unique identifier for the module
    */
    'id'?: number;
    /**
    * The contents of this module, as an array of Module Items. (Present only if requested via include[]=items AND the module is not deemed too large by Canvas.)
    */
    'items'?: Array<ModuleItem>;
    /**
    * The number of items in the module
    */
    'itemsCount'?: number;
    /**
    * The API URL to retrive this module\'s items
    */
    'itemsUrl'?: string;
    /**
    * the name of this module
    */
    'name'?: string;
    /**
    * the position of this module in the course (1-based)
    */
    'position'?: number;
    /**
    * IDs of Modules that must be completed before this one is unlocked
    */
    'prerequisiteModuleIds'?: Array<number>;
    /**
    * if the student\'s final grade for the course should be published to the SIS upon completion of this module
    */
    'publishFinalGrade'?: boolean;
    /**
    * (Optional) Whether this module is published. This field is present only if the caller has permission to view unpublished modules.
    */
    'published'?: boolean;
    /**
    * Whether module items must be unlocked in order
    */
    'requireSequentialProgress'?: boolean;
    /**
    * Whether module requires all required items or one required item to be considered complete (one of \'all\' or \'one\')
    */
    'requirementType'?: string;
    /**
    * The state of this Module for the calling user one of \'locked\', \'unlocked\', \'started\', \'completed\' (Optional; present only if the caller is a student or if the optional parameter \'student_id\' is included)
    */
    'state'?: string;
    /**
    * (Optional) the date this module will unlock
    */
    'unlockAt'?: Date;
    /**
    * the state of the module: \'active\', \'deleted\'
    */
    'workflowState'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "completedAt",
            "baseName": "completed_at",
            "type": "Date"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "Array<ModuleItem>"
        },
        {
            "name": "itemsCount",
            "baseName": "items_count",
            "type": "number"
        },
        {
            "name": "itemsUrl",
            "baseName": "items_url",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "number"
        },
        {
            "name": "prerequisiteModuleIds",
            "baseName": "prerequisite_module_ids",
            "type": "Array<number>"
        },
        {
            "name": "publishFinalGrade",
            "baseName": "publish_final_grade",
            "type": "boolean"
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "boolean"
        },
        {
            "name": "requireSequentialProgress",
            "baseName": "require_sequential_progress",
            "type": "boolean"
        },
        {
            "name": "requirementType",
            "baseName": "requirement_type",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string"
        },
        {
            "name": "unlockAt",
            "baseName": "unlock_at",
            "type": "Date"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Module.attributeTypeMap;
    }
}

