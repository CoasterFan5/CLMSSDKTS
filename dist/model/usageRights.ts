/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Describes the copyright and license information for a File
*/
export class UsageRights {
    /**
    * List of ids of files that were updated
    */
    'fileIds'?: Array<number>;
    /**
    * Copyright line for the file
    */
    'legalCopyright'?: string;
    /**
    * License identifier for the file.
    */
    'license'?: string;
    /**
    * Readable license name
    */
    'licenseName'?: string;
    /**
    * Explanation of the action performed
    */
    'message'?: string;
    /**
    * Justification for using the file in a Canvas course. Valid values are \'own_copyright\', \'public_domain\', \'used_by_permission\', \'fair_use\', \'creative_commons\'
    */
    'useJustification'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "fileIds",
            "baseName": "file_ids",
            "type": "Array<number>"
        },
        {
            "name": "legalCopyright",
            "baseName": "legal_copyright",
            "type": "string"
        },
        {
            "name": "license",
            "baseName": "license",
            "type": "string"
        },
        {
            "name": "licenseName",
            "baseName": "license_name",
            "type": "string"
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "useJustification",
            "baseName": "use_justification",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return UsageRights.attributeTypeMap;
    }
}

