/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class Score {
    /**
    * Indicate to Canvas the status of the user towards the activity\'s completion. Must be one of Initialized, Started, InProgress, Submitted, Completed
    */
    'activityProgress'?: string;
    /**
    * Comment visible to the student about this score.
    */
    'comment'?: string;
    /**
    * Indicate to Canvas the status of the grading process. A value of PendingManual will require intervention by a grader. Values of NotReady, Failed, and Pending will cause the scoreGiven to be ignored. FullyGraded values will require no action. Possible values are NotReady, Failed, Pending, PendingManual, FullyGraded
    */
    'gradingProgress'?: string;
    /**
    * The Current score received in the tool for this line item and user, scaled to the scoreMaximum
    */
    'scoreGiven'?: number;
    /**
    * Maximum possible score for this result; it must be present if scoreGiven is present.
    */
    'scoreMaximum'?: number;
    /**
    * Contains metadata about the submission attempt, like submittedAt: Date and time that the submission was originally created - should use ISO8601-formatted date with subsecond precision.
    */
    'submission'?: object;
    /**
    * Date and time when the score was modified in the tool. Should use subsecond precision.
    */
    'timestamp'?: string;
    /**
    * The lti_user_id or the Canvas user_id
    */
    'userId'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "activityProgress",
            "baseName": "activityProgress",
            "type": "string"
        },
        {
            "name": "comment",
            "baseName": "comment",
            "type": "string"
        },
        {
            "name": "gradingProgress",
            "baseName": "gradingProgress",
            "type": "string"
        },
        {
            "name": "scoreGiven",
            "baseName": "scoreGiven",
            "type": "number"
        },
        {
            "name": "scoreMaximum",
            "baseName": "scoreMaximum",
            "type": "number"
        },
        {
            "name": "submission",
            "baseName": "submission",
            "type": "object"
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "string"
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Score.attributeTypeMap;
    }
}

