/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CalendarLink } from './calendarLink';
import { CourseProgress } from './courseProgress';
import { Enrollment } from './enrollment';
import { GradingPeriod } from './gradingPeriod';
import { Term } from './term';

export class Course {
    /**
    * optional: this will be true if this user is currently prevented from viewing the course because of date restriction settings
    */
    'accessRestrictedByDate'?: boolean;
    /**
    * the account associated with the course
    */
    'accountId'?: number;
    'allowStudentAssignmentEdits'?: boolean;
    'allowStudentForumAttachments'?: boolean;
    'allowWikiComments'?: boolean;
    /**
    * weight final grade based on assignment group percentages
    */
    'applyAssignmentGroupWeights'?: boolean;
    /**
    * optional: whether the course is set as a Blueprint Course (blueprint fields require the Blueprint Courses feature)
    */
    'blueprint'?: boolean;
    /**
    * optional: Set of restrictions applied to all locked course objects
    */
    'blueprintRestrictions'?: object;
    /**
    * optional: Sets of restrictions differentiated by object type applied to locked course objects
    */
    'blueprintRestrictionsByObjectType'?: object;
    'calendar'?: CalendarLink;
    /**
    * the course code
    */
    'courseCode'?: string;
    'courseFormat'?: string;
    'courseProgress'?: CourseProgress;
    /**
    * the date the course was created.
    */
    'createdAt'?: Date;
    /**
    * the type of page that users will see when they first visit the course - \'feed\': Recent Activity Dashboard - \'wiki\': Wiki Front Page - \'modules\': Course Modules/Sections Page - \'assignments\': Course Assignments List - \'syllabus\': Course Syllabus Page other types may be added in the future
    */
    'defaultView'?: string;
    /**
    * the end date for the course, if applicable
    */
    'endAt'?: Date;
    /**
    * the enrollment term associated with the course
    */
    'enrollmentTermId'?: number;
    /**
    * A list of enrollments linking the current user to the course. for student enrollments, grading information may be included if include[]=total_scores
    */
    'enrollments'?: Array<Enrollment>;
    /**
    * the grade_passback_setting set on the course
    */
    'gradePassbackSetting'?: string;
    /**
    * A list of grading periods associated with the course
    */
    'gradingPeriods'?: Array<GradingPeriod>;
    /**
    * the grading standard associated with the course
    */
    'gradingStandardId'?: number;
    'hideFinalGrades'?: boolean;
    /**
    * the unique identifier for the course
    */
    'id'?: number;
    /**
    * the integration identifier for the course, if defined. This field is only included if the user has permission to view SIS information.
    */
    'integrationId'?: string;
    'isPublic'?: boolean;
    'isPublicToAuthUsers'?: boolean;
    'license'?: string;
    /**
    * the course-set locale, if applicable
    */
    'locale'?: string;
    /**
    * the full name of the course. If the requesting user has set a nickname for the course, the nickname will be shown here.
    */
    'name'?: string;
    /**
    * optional: the number of submissions needing grading returned only if the current user has grading rights and include[]=needs_grading_count
    */
    'needsGradingCount'?: number;
    'openEnrollment'?: boolean;
    /**
    * the actual course name. This field is returned only if the requesting user has set a nickname for the course.
    */
    'originalName'?: string;
    /**
    * optional: the permissions the user has for the course. returned only for a single course and include[]=permissions
    */
    'permissions'?: object;
    /**
    * optional: the public description of the course
    */
    'publicDescription'?: string;
    'publicSyllabus'?: boolean;
    'publicSyllabusToAuth'?: boolean;
    'restrictEnrollmentsToCourseDates'?: boolean;
    /**
    * the root account associated with the course
    */
    'rootAccountId'?: number;
    'selfEnrollment'?: boolean;
    /**
    * the SIS identifier for the course, if defined. This field is only included if the user has permission to view SIS information.
    */
    'sisCourseId'?: string;
    /**
    * the unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.
    */
    'sisImportId'?: number;
    /**
    * the start date for the course, if applicable
    */
    'startAt'?: Date;
    'storageQuotaMb'?: number;
    'storageQuotaUsedMb'?: number;
    /**
    * optional: user-generated HTML for the course syllabus
    */
    'syllabusBody'?: string;
    /**
    * optional: whether the course is set as a template (requires the Course Templates feature)
    */
    'template'?: boolean;
    'term'?: Term;
    /**
    * The course\'s IANA time zone name.
    */
    'timeZone'?: string;
    /**
    * optional: the total number of active and invited students in the course
    */
    'totalStudents'?: number;
    /**
    * the UUID of the course
    */
    'uuid'?: string;
    /**
    * the current state of the course, also known as ‘status’.  The value will be one of the following values: \'unpublished\', \'available\', \'completed\', or \'deleted\'.  NOTE: When fetching a singular course that has a \'deleted\' workflow state value, an error will be returned with a message of \'The specified resource does not exist.\'
    */
    'workflowState'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accessRestrictedByDate",
            "baseName": "access_restricted_by_date",
            "type": "boolean"
        },
        {
            "name": "accountId",
            "baseName": "account_id",
            "type": "number"
        },
        {
            "name": "allowStudentAssignmentEdits",
            "baseName": "allow_student_assignment_edits",
            "type": "boolean"
        },
        {
            "name": "allowStudentForumAttachments",
            "baseName": "allow_student_forum_attachments",
            "type": "boolean"
        },
        {
            "name": "allowWikiComments",
            "baseName": "allow_wiki_comments",
            "type": "boolean"
        },
        {
            "name": "applyAssignmentGroupWeights",
            "baseName": "apply_assignment_group_weights",
            "type": "boolean"
        },
        {
            "name": "blueprint",
            "baseName": "blueprint",
            "type": "boolean"
        },
        {
            "name": "blueprintRestrictions",
            "baseName": "blueprint_restrictions",
            "type": "object"
        },
        {
            "name": "blueprintRestrictionsByObjectType",
            "baseName": "blueprint_restrictions_by_object_type",
            "type": "object"
        },
        {
            "name": "calendar",
            "baseName": "calendar",
            "type": "CalendarLink"
        },
        {
            "name": "courseCode",
            "baseName": "course_code",
            "type": "string"
        },
        {
            "name": "courseFormat",
            "baseName": "course_format",
            "type": "string"
        },
        {
            "name": "courseProgress",
            "baseName": "course_progress",
            "type": "CourseProgress"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "defaultView",
            "baseName": "default_view",
            "type": "string"
        },
        {
            "name": "endAt",
            "baseName": "end_at",
            "type": "Date"
        },
        {
            "name": "enrollmentTermId",
            "baseName": "enrollment_term_id",
            "type": "number"
        },
        {
            "name": "enrollments",
            "baseName": "enrollments",
            "type": "Array<Enrollment>"
        },
        {
            "name": "gradePassbackSetting",
            "baseName": "grade_passback_setting",
            "type": "string"
        },
        {
            "name": "gradingPeriods",
            "baseName": "grading_periods",
            "type": "Array<GradingPeriod>"
        },
        {
            "name": "gradingStandardId",
            "baseName": "grading_standard_id",
            "type": "number"
        },
        {
            "name": "hideFinalGrades",
            "baseName": "hide_final_grades",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "integrationId",
            "baseName": "integration_id",
            "type": "string"
        },
        {
            "name": "isPublic",
            "baseName": "is_public",
            "type": "boolean"
        },
        {
            "name": "isPublicToAuthUsers",
            "baseName": "is_public_to_auth_users",
            "type": "boolean"
        },
        {
            "name": "license",
            "baseName": "license",
            "type": "string"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "needsGradingCount",
            "baseName": "needs_grading_count",
            "type": "number"
        },
        {
            "name": "openEnrollment",
            "baseName": "open_enrollment",
            "type": "boolean"
        },
        {
            "name": "originalName",
            "baseName": "original_name",
            "type": "string"
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "object"
        },
        {
            "name": "publicDescription",
            "baseName": "public_description",
            "type": "string"
        },
        {
            "name": "publicSyllabus",
            "baseName": "public_syllabus",
            "type": "boolean"
        },
        {
            "name": "publicSyllabusToAuth",
            "baseName": "public_syllabus_to_auth",
            "type": "boolean"
        },
        {
            "name": "restrictEnrollmentsToCourseDates",
            "baseName": "restrict_enrollments_to_course_dates",
            "type": "boolean"
        },
        {
            "name": "rootAccountId",
            "baseName": "root_account_id",
            "type": "number"
        },
        {
            "name": "selfEnrollment",
            "baseName": "self_enrollment",
            "type": "boolean"
        },
        {
            "name": "sisCourseId",
            "baseName": "sis_course_id",
            "type": "string"
        },
        {
            "name": "sisImportId",
            "baseName": "sis_import_id",
            "type": "number"
        },
        {
            "name": "startAt",
            "baseName": "start_at",
            "type": "Date"
        },
        {
            "name": "storageQuotaMb",
            "baseName": "storage_quota_mb",
            "type": "number"
        },
        {
            "name": "storageQuotaUsedMb",
            "baseName": "storage_quota_used_mb",
            "type": "number"
        },
        {
            "name": "syllabusBody",
            "baseName": "syllabus_body",
            "type": "string"
        },
        {
            "name": "template",
            "baseName": "template",
            "type": "boolean"
        },
        {
            "name": "term",
            "baseName": "term",
            "type": "Term"
        },
        {
            "name": "timeZone",
            "baseName": "time_zone",
            "type": "string"
        },
        {
            "name": "totalStudents",
            "baseName": "total_students",
            "type": "number"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Course.attributeTypeMap;
    }
}

