/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { SisImportData } from './sisImportData';
import { SisImportStatistics } from './sisImportStatistics';
import { User } from './user';

export class SisImport {
    /**
    * Whether stickiness was added to the batch changes.
    */
    'addSisStickiness'?: boolean;
    /**
    * Whether the import was run in batch mode.
    */
    'batchMode'?: boolean;
    /**
    * The term the batch was limited to.
    */
    'batchModeTermId'?: string;
    /**
    * Whether stickiness was cleared.
    */
    'clearSisStickiness'?: boolean;
    /**
    * The date the SIS import was created.
    */
    'createdAt'?: Date;
    /**
    * An array of CSV files for processing
    */
    'csvAttachments'?: Array<Array<any>>;
    'data'?: SisImportData;
    /**
    * The ID of the SIS Import that this import was diffed against
    */
    'diffedAgainstImportId'?: number;
    /**
    * The identifier of the data set that this SIS batch diffs against
    */
    'diffingDataSetIdentifier'?: string;
    /**
    * Whether diffing remaster data was enabled.
    */
    'diffingRemaster'?: boolean;
    /**
    * Whether a diffing job failed because the threshold limit got exceeded.
    */
    'diffingThresholdExceeded'?: boolean;
    /**
    * The date the SIS import finished. Returns null if not finished.
    */
    'endedAt'?: Date;
    'errorsAttachment'?: any;
    /**
    * The unique identifier for the SIS import.
    */
    'id'?: number;
    /**
    * Enables batch mode against all terms in term file. Requires change_threshold to be set.
    */
    'multiTermBatchMode'?: boolean;
    /**
    * Whether UI changes were overridden.
    */
    'overrideSisStickiness'?: boolean;
    /**
    * An array of CSV_file/error_message pairs.
    */
    'processingErrors'?: Array<Array<string>>;
    /**
    * Only imports that are complete will get this data. An array of CSV_file/warning_message pairs.
    */
    'processingWarnings'?: Array<Array<string>>;
    /**
    * The progress of the SIS import. The progress will reset when using batch_mode and have a different progress for the cleanup stage
    */
    'progress'?: string;
    /**
    * When set the import will skip any deletes.
    */
    'skipDeletes'?: boolean;
    'statistics'?: SisImportStatistics;
    /**
    * The date the SIS import was last updated.
    */
    'updatedAt'?: Date;
    'user'?: User;
    /**
    * The current state of the SIS import.  - \'initializing\': The SIS import is being created, if this gets stuck in initializing, it will not import and will continue on to next import.  - \'created\': The SIS import has been created.  - \'importing\': The SIS import is currently processing.  - \'cleanup_batch\': The SIS import is currently cleaning up courses, sections, and enrollments not included in the batch for batch_mode imports.  - \'imported\': The SIS import has completed successfully.  - \'imported_with_messages\': The SIS import completed with errors or warnings.  - \'aborted\': The SIS import was aborted.  - \'failed_with_messages\': The SIS import failed with errors.  - \'failed\': The SIS import failed.  - \'restoring\': The SIS import is restoring states of imported items.  - \'partially_restored\': The SIS import is restored some of the states of imported items. This is generally due to passing a param like undelete only.  - \'restored\': The SIS import is restored all of the states of imported items.
    */
    'workflowState'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "addSisStickiness",
            "baseName": "add_sis_stickiness",
            "type": "boolean"
        },
        {
            "name": "batchMode",
            "baseName": "batch_mode",
            "type": "boolean"
        },
        {
            "name": "batchModeTermId",
            "baseName": "batch_mode_term_id",
            "type": "string"
        },
        {
            "name": "clearSisStickiness",
            "baseName": "clear_sis_stickiness",
            "type": "boolean"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "csvAttachments",
            "baseName": "csv_attachments",
            "type": "Array<Array<any>>"
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "SisImportData"
        },
        {
            "name": "diffedAgainstImportId",
            "baseName": "diffed_against_import_id",
            "type": "number"
        },
        {
            "name": "diffingDataSetIdentifier",
            "baseName": "diffing_data_set_identifier",
            "type": "string"
        },
        {
            "name": "diffingRemaster",
            "baseName": "diffing_remaster",
            "type": "boolean"
        },
        {
            "name": "diffingThresholdExceeded",
            "baseName": "diffing_threshold_exceeded",
            "type": "boolean"
        },
        {
            "name": "endedAt",
            "baseName": "ended_at",
            "type": "Date"
        },
        {
            "name": "errorsAttachment",
            "baseName": "errors_attachment",
            "type": "any"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "multiTermBatchMode",
            "baseName": "multi_term_batch_mode",
            "type": "boolean"
        },
        {
            "name": "overrideSisStickiness",
            "baseName": "override_sis_stickiness",
            "type": "boolean"
        },
        {
            "name": "processingErrors",
            "baseName": "processing_errors",
            "type": "Array<Array<string>>"
        },
        {
            "name": "processingWarnings",
            "baseName": "processing_warnings",
            "type": "Array<Array<string>>"
        },
        {
            "name": "progress",
            "baseName": "progress",
            "type": "string"
        },
        {
            "name": "skipDeletes",
            "baseName": "skip_deletes",
            "type": "boolean"
        },
        {
            "name": "statistics",
            "baseName": "statistics",
            "type": "SisImportStatistics"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "User"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return SisImport.attributeTypeMap;
    }
}

