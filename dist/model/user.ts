/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Enrollment } from './enrollment';

/**
* A Canvas user, e.g. a student, teacher, administrator, observer, etc.
*/
export class User {
    /**
    * Optional: If avatars are enabled and caller is admin, this field can be requested and will contain the current state of the user\'s avatar.
    */
    'avatarState'?: string;
    /**
    * If avatars are enabled, this field will be included and contain a url to retrieve the user\'s avatar.
    */
    'avatarUrl'?: string;
    /**
    * Optional: The user\'s bio.
    */
    'bio'?: string;
    /**
    * Optional: This field can be requested with certain API calls, and will return the users primary email address.
    */
    'email'?: string;
    /**
    * Optional: This field can be requested with certain API calls, and will return a list of the users active enrollments. See the List enrollments API for more details about the format of these records.
    */
    'enrollments'?: Array<Enrollment>;
    /**
    * The first name of the user.
    */
    'firstName'?: string;
    /**
    * The ID of the user.
    */
    'id': number;
    /**
    * The integration_id associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.
    */
    'integrationId'?: string;
    /**
    * Optional: This field is only returned in certain API calls, and will return a timestamp representing the last time the user logged in to canvas.
    */
    'lastLogin'?: Date;
    /**
    * The last name of the user.
    */
    'lastName'?: string;
    /**
    * Optional: This field can be requested with certain API calls, and will return the users locale in RFC 5646 format.
    */
    'locale'?: string;
    /**
    * The unique login id for the user.  This is what the user uses to log in to Canvas.
    */
    'loginId'?: string;
    /**
    * The name of the user.
    */
    'name'?: string;
    /**
    * Optional: This field is only returned if pronouns are enabled, and will return the pronouns of the user.
    */
    'pronouns'?: string;
    /**
    * A short name the user has selected, for use in conversations or other less formal places through the site.
    */
    'shortName'?: string;
    /**
    * The id of the SIS import.  This field is only included if the user came from a SIS import and has permissions to manage SIS information.
    */
    'sisImportId'?: number;
    /**
    * The SIS ID associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.
    */
    'sisUserId'?: string;
    /**
    * The name of the user that is should be used for sorting groups of users, such as in the gradebook.
    */
    'sortableName'?: string;
    /**
    * Optional: This field is only returned in certain API calls, and will return the IANA time zone name of the user\'s preferred timezone.
    */
    'timeZone'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "avatarState",
            "baseName": "avatar_state",
            "type": "string"
        },
        {
            "name": "avatarUrl",
            "baseName": "avatar_url",
            "type": "string"
        },
        {
            "name": "bio",
            "baseName": "bio",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "enrollments",
            "baseName": "enrollments",
            "type": "Array<Enrollment>"
        },
        {
            "name": "firstName",
            "baseName": "first_name",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "integrationId",
            "baseName": "integration_id",
            "type": "string"
        },
        {
            "name": "lastLogin",
            "baseName": "last_login",
            "type": "Date"
        },
        {
            "name": "lastName",
            "baseName": "last_name",
            "type": "string"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string"
        },
        {
            "name": "loginId",
            "baseName": "login_id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "pronouns",
            "baseName": "pronouns",
            "type": "string"
        },
        {
            "name": "shortName",
            "baseName": "short_name",
            "type": "string"
        },
        {
            "name": "sisImportId",
            "baseName": "sis_import_id",
            "type": "number"
        },
        {
            "name": "sisUserId",
            "baseName": "sis_user_id",
            "type": "string"
        },
        {
            "name": "sortableName",
            "baseName": "sortable_name",
            "type": "string"
        },
        {
            "name": "timeZone",
            "baseName": "time_zone",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return User.attributeTypeMap;
    }
}

