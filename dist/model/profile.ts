/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CalendarLink } from './calendarLink';

/**
* Profile details for a Canvas user.
*/
export class Profile {
    /**
    * The avatar_url can change over time, so we recommend not caching it for more than a few hours
    */
    'avatarUrl'?: string;
    'bio'?: string;
    'calendar'?: CalendarLink;
    /**
    * The ID of the user.
    */
    'id'?: number;
    /**
    * Optional: Whether or not the user is a K5 user. This field is nil if the user settings are not for the user making the request.
    */
    'k5User'?: boolean;
    /**
    * The users locale.
    */
    'locale'?: string;
    /**
    * sample_user@example.com
    */
    'loginId'?: string;
    'ltiUserId'?: string;
    /**
    * Sample User
    */
    'name'?: string;
    /**
    * sample_user@example.com
    */
    'primaryEmail'?: string;
    /**
    * Name pronunciation
    */
    'pronunciation'?: string;
    /**
    * Sample User
    */
    'shortName'?: string;
    /**
    * sis1
    */
    'sisUserId'?: string;
    /**
    * user, sample
    */
    'sortableName'?: string;
    /**
    * Optional: This field is only returned in certain API calls, and will return the IANA time zone name of the user\'s preferred timezone.
    */
    'timeZone'?: string;
    'title'?: string;
    /**
    * Optional: Whether or not the user should see the classic font on the dashboard. Only applies if k5_user is true. This field is nil if the user settings are not for the user making the request.
    */
    'useClassicFontInK5'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "avatarUrl",
            "baseName": "avatar_url",
            "type": "string"
        },
        {
            "name": "bio",
            "baseName": "bio",
            "type": "string"
        },
        {
            "name": "calendar",
            "baseName": "calendar",
            "type": "CalendarLink"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "k5User",
            "baseName": "k5_user",
            "type": "boolean"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string"
        },
        {
            "name": "loginId",
            "baseName": "login_id",
            "type": "string"
        },
        {
            "name": "ltiUserId",
            "baseName": "lti_user_id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "primaryEmail",
            "baseName": "primary_email",
            "type": "string"
        },
        {
            "name": "pronunciation",
            "baseName": "pronunciation",
            "type": "string"
        },
        {
            "name": "shortName",
            "baseName": "short_name",
            "type": "string"
        },
        {
            "name": "sisUserId",
            "baseName": "sis_user_id",
            "type": "string"
        },
        {
            "name": "sortableName",
            "baseName": "sortable_name",
            "type": "string"
        },
        {
            "name": "timeZone",
            "baseName": "time_zone",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "useClassicFontInK5",
            "baseName": "use_classic_font_in_k5",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return Profile.attributeTypeMap;
    }
}

