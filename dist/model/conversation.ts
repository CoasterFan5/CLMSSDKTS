/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ConversationParticipant } from './conversationParticipant';

export class Conversation {
    /**
    * Array of user ids who are involved in the conversation, ordered by participation level, then alphabetical. Excludes current user, unless this is a monologue.
    */
    'audience'?: Array<number>;
    /**
    * Most relevant shared contexts (courses and groups) between current user and other participants. If there is only one participant, it will also include that user\'s enrollment(s)/ membership type(s) in each course/group.
    */
    'audienceContexts'?: Array<string>;
    /**
    * URL to appropriate icon for this conversation (custom, individual or group avatar, depending on audience).
    */
    'avatarUrl'?: string;
    /**
    * Name of the course or group in which the conversation is occurring.
    */
    'contextName'?: string;
    /**
    * the unique identifier for the conversation.
    */
    'id'?: number;
    /**
    * A <=100 character preview from the most recent message.
    */
    'lastMessage'?: string;
    /**
    * the number of messages in the conversation.
    */
    'messageCount'?: number;
    /**
    * Array of users participating in the conversation. Includes current user.
    */
    'participants'?: Array<ConversationParticipant>;
    /**
    * whether the conversation is private.
    */
    '_private'?: boolean;
    /**
    * Additional conversation flags (last_author, attachments, media_objects). Each listed property means the flag is set to true (i.e. the current user is the most recent author, there are attachments, or there are media objects)
    */
    'properties'?: Array<string>;
    /**
    * whether the conversation is starred.
    */
    'starred'?: boolean;
    /**
    * the date and time at which the last message was sent.
    */
    'startAt'?: Date;
    /**
    * the subject of the conversation.
    */
    'subject'?: string;
    /**
    * whether the current user is subscribed to the conversation.
    */
    'subscribed'?: boolean;
    /**
    * indicates whether the conversation is visible under the current scope and filter. This attribute is always true in the index API response, and is primarily useful in create/update responses so that you can know if the record should be displayed in the UI. The default scope is assumed, unless a scope or filter is passed to the create/update API call.
    */
    'visible'?: boolean;
    /**
    * The current state of the conversation (read, unread or archived).
    */
    'workflowState'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "audience",
            "baseName": "audience",
            "type": "Array<number>"
        },
        {
            "name": "audienceContexts",
            "baseName": "audience_contexts",
            "type": "Array<string>"
        },
        {
            "name": "avatarUrl",
            "baseName": "avatar_url",
            "type": "string"
        },
        {
            "name": "contextName",
            "baseName": "context_name",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "lastMessage",
            "baseName": "last_message",
            "type": "string"
        },
        {
            "name": "messageCount",
            "baseName": "message_count",
            "type": "number"
        },
        {
            "name": "participants",
            "baseName": "participants",
            "type": "Array<ConversationParticipant>"
        },
        {
            "name": "_private",
            "baseName": "private",
            "type": "boolean"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "Array<string>"
        },
        {
            "name": "starred",
            "baseName": "starred",
            "type": "boolean"
        },
        {
            "name": "startAt",
            "baseName": "start_at",
            "type": "Date"
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string"
        },
        {
            "name": "subscribed",
            "baseName": "subscribed",
            "type": "boolean"
        },
        {
            "name": "visible",
            "baseName": "visible",
            "type": "boolean"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Conversation.attributeTypeMap;
    }
}

