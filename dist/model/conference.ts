/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ConferenceRecording } from './conferenceRecording';

export class Conference {
    /**
    * Array of user ids that are attendees in the conference
    */
    'attendees'?: Array<number>;
    /**
    * The 3rd party\'s ID for the conference
    */
    'conferenceKey'?: string;
    /**
    * The type of conference
    */
    'conferenceType'?: string;
    /**
    * The ID of this conference\'s context.
    */
    'contextId'?: number;
    /**
    * The type of this conference\'s context, typically \'Course\' or \'Group\'.
    */
    'contextType'?: string;
    /**
    * The description for the conference
    */
    'description'?: string;
    /**
    * The expected duration the conference is supposed to last
    */
    'duration'?: number;
    /**
    * The date that the conference ended at, null if it hasn\'t ended
    */
    'endedAt'?: Date;
    /**
    * True if the conference type has advanced settings.
    */
    'hasAdvancedSettings'?: boolean;
    /**
    * The id of the conference
    */
    'id'?: number;
    /**
    * Array of user ids that are invitees in the conference
    */
    'invitees'?: Array<number>;
    /**
    * URL to join the conference, may be null if the conference type doesn\'t set it
    */
    'joinUrl'?: string;
    /**
    * If true the conference is long running and has no expected end time
    */
    'longRunning'?: boolean;
    /**
    * A List of recordings for the conference
    */
    'recordings'?: Array<ConferenceRecording>;
    /**
    * The date the conference started at, null if it hasn\'t started
    */
    'startedAt'?: Date;
    /**
    * The title of the conference
    */
    'title'?: string;
    /**
    * URL for the conference, may be null if the conference type doesn\'t set it
    */
    'url'?: string;
    /**
    * A collection of settings specific to the conference type
    */
    'userSettings'?: object;
    /**
    * Array of user ids that are participants in the conference
    */
    'users'?: Array<number>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attendees",
            "baseName": "attendees",
            "type": "Array<number>"
        },
        {
            "name": "conferenceKey",
            "baseName": "conference_key",
            "type": "string"
        },
        {
            "name": "conferenceType",
            "baseName": "conference_type",
            "type": "string"
        },
        {
            "name": "contextId",
            "baseName": "context_id",
            "type": "number"
        },
        {
            "name": "contextType",
            "baseName": "context_type",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "number"
        },
        {
            "name": "endedAt",
            "baseName": "ended_at",
            "type": "Date"
        },
        {
            "name": "hasAdvancedSettings",
            "baseName": "has_advanced_settings",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "invitees",
            "baseName": "invitees",
            "type": "Array<number>"
        },
        {
            "name": "joinUrl",
            "baseName": "join_url",
            "type": "string"
        },
        {
            "name": "longRunning",
            "baseName": "long_running",
            "type": "boolean"
        },
        {
            "name": "recordings",
            "baseName": "recordings",
            "type": "Array<ConferenceRecording>"
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "Date"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "userSettings",
            "baseName": "user_settings",
            "type": "object"
        },
        {
            "name": "users",
            "baseName": "users",
            "type": "Array<number>"
        }    ];

    static getAttributeTypeMap() {
        return Conference.attributeTypeMap;
    }
}

