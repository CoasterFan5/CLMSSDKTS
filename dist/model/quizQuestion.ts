/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Answer } from './answer';

export class QuizQuestion {
    /**
    * An array of available answers to display to the student.
    */
    'answers'?: Array<Answer>;
    /**
    * The comments to display if the student answers the question correctly.
    */
    'correctComments'?: string;
    /**
    * The ID of the quiz question.
    */
    'id': number;
    /**
    * The comments to display if the student answers incorrectly.
    */
    'incorrectComments'?: string;
    /**
    * The comments to display regardless of how the student answered.
    */
    'neutralComments'?: string;
    /**
    * The maximum amount of points possible received for getting this question correct.
    */
    'pointsPossible'?: number;
    /**
    * The order in which the question will be retrieved and displayed.
    */
    'position'?: number;
    /**
    * The name of the question.
    */
    'questionName'?: string;
    /**
    * The text of the question.
    */
    'questionText'?: string;
    /**
    * The type of the question.
    */
    'questionType'?: string;
    /**
    * The ID of the Quiz the question belongs to.
    */
    'quizId': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "answers",
            "baseName": "answers",
            "type": "Array<Answer>"
        },
        {
            "name": "correctComments",
            "baseName": "correct_comments",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "incorrectComments",
            "baseName": "incorrect_comments",
            "type": "string"
        },
        {
            "name": "neutralComments",
            "baseName": "neutral_comments",
            "type": "string"
        },
        {
            "name": "pointsPossible",
            "baseName": "points_possible",
            "type": "number"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "number"
        },
        {
            "name": "questionName",
            "baseName": "question_name",
            "type": "string"
        },
        {
            "name": "questionText",
            "baseName": "question_text",
            "type": "string"
        },
        {
            "name": "questionType",
            "baseName": "question_type",
            "type": "string"
        },
        {
            "name": "quizId",
            "baseName": "quiz_id",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return QuizQuestion.attributeTypeMap;
    }
}

