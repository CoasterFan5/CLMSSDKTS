/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { LtiToolConfiguration } from './ltiToolConfiguration';

/**
* a Canvas API key (or LTI 1.3 registration)
*/
export class DeveloperKey {
    /**
    * (API keys only) The number of active access tokens associated with the key
    */
    'accessTokenCount'?: number;
    /**
    * The name of the account that owns the key
    */
    'accountName'?: string;
    /**
    * (API keys only) If true, allows `includes` parameters in API requests that match the scopes of this key
    */
    'allowIncludes'?: boolean;
    /**
    * (API keys only) The client secret used in the OAuth authorization_code flow.
    */
    'apiKey'?: string;
    /**
    * (API keys only) Used in OAuth2 client credentials flow to specify the audience for the access token
    */
    'clientCredentialsAudience'?: string;
    /**
    * Timestamp of the key\'s creation
    */
    'createdAt'?: Date;
    /**
    * Contact email configured for key
    */
    'email'?: string;
    /**
    * URL for a small icon to display in key list
    */
    'iconUrl'?: string;
    /**
    * The Canvas ID of the DeveloperKey object
    */
    'id'?: number;
    /**
    * True if key represents an LTI 1.3 Registration. False for Canvas API keys
    */
    'isLtiKey'?: boolean;
    /**
    * (LTI keys only) Returns true if key was created via Dynamic Registration.
    */
    'isLtiRegistration'?: boolean;
    /**
    * (API keys only) The last time an access token for this key was used in an API request
    */
    'lastUsedAt'?: Date;
    /**
    * (LTI keys only) The LTI IMS Registration object for this key, if key was created via Dynamic Registration.
    */
    'ltiRegistration'?: object;
    /**
    * The display name
    */
    'name'?: string;
    /**
    * User-provided notes about key
    */
    'notes'?: string;
    /**
    * (LTI keys only) The tool\'s public JWK in JSON format. Discouraged in favor of a url hosting a JWK set.
    */
    'publicJwk'?: object;
    /**
    * (LTI keys only) The tool-hosted URL containing its public JWK keyset. Canvas may cache JWKs up to 5 minutes.
    */
    'publicJwkUrl'?: string;
    /**
    * Deprecated in favor of redirect_uris. Do not use.
    */
    'redirectUri'?: string;
    /**
    * List of URLs used during OAuth2 flow to validate given redirect URI (API keys), or to redirect to after login (LTI keys)
    */
    'redirectUris'?: Array<string>;
    /**
    * (API keys only) If true, then token requests with this key must include scopes
    */
    'requireScopes'?: boolean;
    /**
    * List of API endpoints key is allowed to access (API keys), or LTI 1.3 scopes (LTI keys)
    */
    'scopes'?: Array<string>;
    /**
    * (API keys only) If true, key is only usable in non-production environments (test, beta). Avoids problems with beta refresh.
    */
    'testClusterOnly'?: boolean;
    'toolConfiguration'?: LtiToolConfiguration;
    /**
    * Timestamp of the key\'s last update
    */
    'updatedAt'?: Date;
    /**
    * Unused.
    */
    'userId'?: string;
    /**
    * Unused.
    */
    'userName'?: string;
    /**
    * User-specified code representing the vendor that uses the key
    */
    'vendorCode'?: string;
    /**
    * True for all keys except Site Admin-level keys, which default to false. Controls visibility in the Inherited tab.
    */
    'visible'?: boolean;
    /**
    * The state of the key
    */
    'workflowState'?: DeveloperKey.WorkflowStateEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accessTokenCount",
            "baseName": "access_token_count",
            "type": "number"
        },
        {
            "name": "accountName",
            "baseName": "account_name",
            "type": "string"
        },
        {
            "name": "allowIncludes",
            "baseName": "allow_includes",
            "type": "boolean"
        },
        {
            "name": "apiKey",
            "baseName": "api_key",
            "type": "string"
        },
        {
            "name": "clientCredentialsAudience",
            "baseName": "client_credentials_audience",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "iconUrl",
            "baseName": "icon_url",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "isLtiKey",
            "baseName": "is_lti_key",
            "type": "boolean"
        },
        {
            "name": "isLtiRegistration",
            "baseName": "is_lti_registration",
            "type": "boolean"
        },
        {
            "name": "lastUsedAt",
            "baseName": "last_used_at",
            "type": "Date"
        },
        {
            "name": "ltiRegistration",
            "baseName": "lti_registration",
            "type": "object"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "publicJwk",
            "baseName": "public_jwk",
            "type": "object"
        },
        {
            "name": "publicJwkUrl",
            "baseName": "public_jwk_url",
            "type": "string"
        },
        {
            "name": "redirectUri",
            "baseName": "redirect_uri",
            "type": "string"
        },
        {
            "name": "redirectUris",
            "baseName": "redirect_uris",
            "type": "Array<string>"
        },
        {
            "name": "requireScopes",
            "baseName": "require_scopes",
            "type": "boolean"
        },
        {
            "name": "scopes",
            "baseName": "scopes",
            "type": "Array<string>"
        },
        {
            "name": "testClusterOnly",
            "baseName": "test_cluster_only",
            "type": "boolean"
        },
        {
            "name": "toolConfiguration",
            "baseName": "tool_configuration",
            "type": "LtiToolConfiguration"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string"
        },
        {
            "name": "userName",
            "baseName": "user_name",
            "type": "string"
        },
        {
            "name": "vendorCode",
            "baseName": "vendor_code",
            "type": "string"
        },
        {
            "name": "visible",
            "baseName": "visible",
            "type": "boolean"
        },
        {
            "name": "workflowState",
            "baseName": "workflow_state",
            "type": "DeveloperKey.WorkflowStateEnum"
        }    ];

    static getAttributeTypeMap() {
        return DeveloperKey.attributeTypeMap;
    }
}

export namespace DeveloperKey {
    export enum WorkflowStateEnum {
        Active = <any> 'active',
        Deleted = <any> 'deleted'
    }
}
