/**
 * Title was not specified
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { RubricRating } from './rubricRating';

export class Outcome {
    /**
    * whether this outcome has been used to assess a student
    */
    'assessed'?: boolean;
    /**
    * this defines the variable value used by the calculation_method. included only if calculation_method uses it
    */
    'calculationInt'?: number;
    /**
    * the method used to calculate a students score
    */
    'calculationMethod'?: string;
    /**
    * whether the current user can update the outcome
    */
    'canEdit'?: boolean;
    /**
    * whether the outcome can be unlinked
    */
    'canUnlink'?: boolean;
    /**
    * the context owning the outcome. may be null for global outcomes
    */
    'contextId'?: number;
    'contextType'?: string;
    /**
    * description of the outcome. omitted in the abbreviated form.
    */
    'description'?: string;
    /**
    * Optional friendly name for reporting
    */
    'displayName'?: string;
    /**
    * whether updates to this outcome will propagate to unassessed rubrics that have imported it
    */
    'hasUpdateableRubrics'?: boolean;
    /**
    * the ID of the outcome
    */
    'id'?: number;
    /**
    * points necessary to demonstrate mastery outcomes. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.
    */
    'masteryPoints'?: number;
    /**
    * maximum points possible. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.
    */
    'pointsPossible'?: number;
    /**
    * possible ratings for this outcome. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.
    */
    'ratings'?: Array<RubricRating>;
    /**
    * title of the outcome
    */
    'title'?: string;
    /**
    * the URL for fetching/updating the outcome. should be treated as opaque
    */
    'url'?: string;
    /**
    * A custom GUID for the learning standard.
    */
    'vendorGuid'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "assessed",
            "baseName": "assessed",
            "type": "boolean"
        },
        {
            "name": "calculationInt",
            "baseName": "calculation_int",
            "type": "number"
        },
        {
            "name": "calculationMethod",
            "baseName": "calculation_method",
            "type": "string"
        },
        {
            "name": "canEdit",
            "baseName": "can_edit",
            "type": "boolean"
        },
        {
            "name": "canUnlink",
            "baseName": "can_unlink",
            "type": "boolean"
        },
        {
            "name": "contextId",
            "baseName": "context_id",
            "type": "number"
        },
        {
            "name": "contextType",
            "baseName": "context_type",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string"
        },
        {
            "name": "hasUpdateableRubrics",
            "baseName": "has_updateable_rubrics",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "masteryPoints",
            "baseName": "mastery_points",
            "type": "number"
        },
        {
            "name": "pointsPossible",
            "baseName": "points_possible",
            "type": "number"
        },
        {
            "name": "ratings",
            "baseName": "ratings",
            "type": "Array<RubricRating>"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "vendorGuid",
            "baseName": "vendor_guid",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Outcome.attributeTypeMap;
    }
}

